$date
  Thu Mar 10 19:38:16 2022
$end
$version
  GHDL v0
$end
$timescale
  1 fs
$end
$scope module standard $end
$upscope $end
$scope module std_logic_1164 $end
$upscope $end
$scope module numeric_std $end
$upscope $end
$scope module add4_tb $end
$var reg 4 ! a_t[3:0] $end
$var reg 4 " b_t[3:0] $end
$var reg 1 # c_it $end
$var reg 4 $ s_t[3:0] $end
$var reg 1 % c_ot $end
$scope module dut $end
$var reg 4 & a_i[3:0] $end
$var reg 4 ' b_i[3:0] $end
$var reg 1 ( c_i $end
$var reg 4 ) s_o[3:0] $end
$var reg 1 * c_o $end
$var reg 5 + c[4:0] $end
$scope module sum4(0) $end
$scope module sum $end
$var reg 1 , a_i $end
$var reg 1 - b_i $end
$var reg 1 . c_i $end
$var reg 1 / s_o $end
$var reg 1 0 c_o $end
$upscope $end
$upscope $end
$scope module sum4(1) $end
$scope module sum $end
$var reg 1 1 a_i $end
$var reg 1 2 b_i $end
$var reg 1 3 c_i $end
$var reg 1 4 s_o $end
$var reg 1 5 c_o $end
$upscope $end
$upscope $end
$scope module sum4(2) $end
$scope module sum $end
$var reg 1 6 a_i $end
$var reg 1 7 b_i $end
$var reg 1 8 c_i $end
$var reg 1 9 s_o $end
$var reg 1 : c_o $end
$upscope $end
$upscope $end
$scope module sum4(3) $end
$scope module sum $end
$var reg 1 ; a_i $end
$var reg 1 < b_i $end
$var reg 1 = c_i $end
$var reg 1 > s_o $end
$var reg 1 ? c_o $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
b1000 !
b0111 "
1#
b0000 $
1%
b1000 &
b0111 '
1(
b0000 )
1*
b11111 +
0,
1-
1.
0/
10
01
12
13
04
15
06
17
18
09
1:
1;
0<
1=
0>
1?
#1000000
b0101 !
b0011 "
0#
b1000 $
0%
b0101 &
b0011 '
0(
b1000 )
0*
b01110 +
1,
0.
0/
16
07
0;
1>
0?
#2000000
b1100 !
b0010 "
1#
b1111 $
0%
b1100 &
b0010 '
1(
b1111 )
0*
b00001 +
0,
0-
1.
1/
00
03
14
05
08
19
0:
1;
0=
1>
0?
#3000000
b1010 !
b1000 "
0#
b0010 $
1%
b1010 &
b1000 '
0(
b0010 )
1*
b10000 +
0.
0/
11
02
06
09
1<
0>
1?
#4000000
